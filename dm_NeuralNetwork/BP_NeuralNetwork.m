% %--------用BP神经网络对两类飞蠓进行分类-----------
% %测量了这两类蚊子每个个体的翼长和触角长，获得数据如下所示，现抓到三只新蚊子根
% %据他们的翼长和触角长分别为（1.80,1.24）,（1.84,1.28）,(2.04,1.40)判断属于哪一类蚊子
% % 翼长        触角长   类别 
% % 1.72        1.24     AF
% % 1.74        1.36     AF
% % 1.64        1.38     AF
% % 1.82        1.38     AF
% % 1.90        1.38     AF
% % 1.70        1.40     AF
% % 1.82        1.48     AF
% % 1.82        1.54     AF
% % 2.08        1.56     AF
% % 1.78        1.14     APF
% % 1.96        1.18     APF
% % 1.86        1.20     APF
% % 2.00        1.26     APF
% % 2.00        1.28     APF
% % 1.96        1.30     APF
% clc;clear;
% p1=[1.72       1.24
% 1.74       1.36
% 1.64        1.38
% 1.82        1.38
% 1.90        1.38
% 1.70        1.40
% 1.82        1.48
% 1.82        1.54
% 2.08        1.56
% ];%p1代表AF这一类
% p2=[1.78       1.14
% 1.96       1.18
% 1.86       1.20
% 2.00       1.26
% 2.00       1.28
% 1.96       1.30
% ];%p2代表APF这一类
% p=[p1;p2]'
% pr=minmax(p)%minmax()函数用于获取数组中每一行的最小值和最大值。
% goal=[ones(1,9),zeros(1,6)]%目标向量，1代表AF，0代表APF
% plot(p1(:,1),p1(:,2),'g+',p2(:,1),p2(:,2),'ro')
% %也可使用plotpv(p,goal)
% net=newff(pr,[2,1],{'logsig','logsig'});
% % 函数newff建立一个可训练的前馈网络。这需要4个输入参数：
% % 1.第一个参数是一个Rx2的矩阵以定义R个输入向量的最小值和最大值。
% % 2.第二个参数是一个设定每层神经元个数的数组。
% % 3.第三个参数是包含每层用到的传递函数名称的细胞数组。
% % 4.最后一个参数是用到的训练函数的名称。
% %属性 'logsig' 隐层采用Sigmoid传输函数
% %属性 'logsig' 输出层采用Sigmoid传输函数
% net.trainParam.show = 10;%每间隔100步显示一次训练结果
% net.trainParam.lr = 0.05;%学习速率0.05
% net.trainParam.goal = 1e-10;%训练目标最小误差1e-10
% net.trainParam.epochs = 50000;%允许最大训练步数50000步
% net = train(net,p,goal);
% y0=sim(net,p)%sim()仿真函数
% x=[1.80 1.24;1.84 1.28;2.04 1.40]';
% y=sim(net,x)
% hold on;
% p11=[1.80 1.24;1.84 1.28;2.04 1.40];
% plot(p11(:,1),p11(:,2),'b*');
% hold on;
% plotpc(net.iw{1},net.b{1})
% %net.iw{1}表示神经网络的第一层的权重
% %net.b{1}表示神经网络第一层的偏置


% %---------下面用BP神经做逻辑异或------------
% p = [0 0 1 1; 0 1 0 1]
% t = [0 1 1 0]
% goal = t
% plotpv(p,t)%绘制输入向量和目标向量
% net=newff( minmax(p),[2,1],{'logsig','logsig'});
% net.trainParam.show = 10;%每间隔100步显示一次训练结果
% net.trainParam.lr = 0.05;%学习速率0.05
% net.trainParam.goal = 1e-10;%训练目标最小误差1e-10
% net.trainParam.epochs = 50000;%允许最大训练步数50000步
% net = train(net,p,goal);
% plotpc(net.iw{1},net.b{1})

%---------用BP神经做划分的例子------------
clc;clear;
p=[5 6 5 5 4 8 8 4 5 7 1 1 4 5 7 10 4 2 8 8;
   5 4 6 4 5 5 8 5 7 8 2 4 2 1 3 4 9 8 9 10];
t=[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1];   
plotpv(p,t)
goal = t
plotpv(p,t)%绘制输入向量和目标向量
net=newff( minmax(p),[2,1],{'logsig','logsig'});
net.trainParam.show = 10;%每间隔100步显示一次训练结果
net.trainParam.lr = 0.05;%学习速率0.05
net.trainParam.goal = 1e-10;%训练目标最小误差1e-10
net.trainParam.epochs = 50000;%允许最大训练步数50000步
net = train(net,p,goal)
plotpc(net.iw{1},net.b{1})